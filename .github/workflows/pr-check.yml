name: PR Check

on:
  pull_request:
  workflow_dispatch:

jobs:
  # ========= Build & Push Job =========
  PR Check:
    runs-on: ubuntu-22.04
    steps:
      # 1) 리포지토리 및 프라이빗 서브모듈 체크아웃
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          submodules: true

      # 2) JDK 21 설치 (Gradle 빌드를 위한 환경 설정)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3) 서브모듈 내의 application-prod.yml 파일을 메인 프로젝트의 resources로 복사
      - name: Copy application-prod.yml
        run: |
          cp 25-1-ClubFair-Server-Properties/application-prod.yml src/main/resources/

      # 4) Gradle 빌드
      - name: Build with Gradle
        run: |
          ./gradlew clean build

      # 5) AWS 자격증명 설정 (ECR에 Push할 수 있는 권한)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 6) ECR 로그인
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # 7) Docker 이미지 빌드 및 ECR에 Push
      - name: Build and Push to ECR
        run: |
          docker buildx build --platform linux/amd64 --load \
            -t 533267033034.dkr.ecr.ap-northeast-2.amazonaws.com/jobfair:latest .
          docker push 533267033034.dkr.ecr.ap-northeast-2.amazonaws.com/jobfair:latest

  # ========= Deploy Job =========
  Deploy:
    needs: [ build-and-push ]
    runs-on: ubuntu-22.04
    steps:
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: 3.36.249.253
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 1) EC2에서 ECR 로그인 (EC2에는 이미 적절한 IAM Role이 할당되어 있어야 함)
            aws ecr get-login-password --region ap-northeast-2 \
              | docker login --username AWS --password-stdin 533267033034.dkr.ecr.ap-northeast-2.amazonaws.com

            # 2) 최신 이미지 Pull
            docker pull 533267033034.dkr.ecr.ap-northeast-2.amazonaws.com/jobfair:latest

            # 3) 기존 컨테이너 종료 및 제거 (이미 실행 중이면)
            docker stop jobfair || true
            docker rm jobfair || true

            # 4) 새 컨테이너 실행 (호스트 8080 포트를 컨테이너 8080 포트에 매핑)
            docker run -d --name jobfair -p 8080:8080 533267033034.dkr.ecr.ap-northeast-2.amazonaws.com/jobfair:latest
